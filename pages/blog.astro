---
import MainLayout from '../layouts/MainLayout.astro';
import BlogCard from '../components/BlogCard.astro';


const title = 'Richard Waine Photography Blog';
const h1 = "Blog"

const posts = await Astro.glob('../posts/*.md')


---


<MainLayout title={title}>
 




<h1>{h1}</h1>




<div id="app">
  <div class="blog-container">
    <div class="main-content">
      <section class="filter-section">
    <div class="filter-header">
        <h2 class="filter-title">Browse Articles</h2>
        <!-- Filter toggle button for mobile -->
        <button id="filter-toggle" class="filter-toggle-btn">
            Filter <span class="arrow">&#9660;</span>
        </button>
    </div>
    <!-- NEW: Wrapper for filter content -->
    <div class="filter-content" id="filter-content">
        <div class="filter-tabs" id="category-filters">
            <button class="filter-btn active" data-category="all">All</button>
            <button class="filter-btn" data-category="headshot-tips">Headshot Tips</button>
            <button class="filter-btn" data-category="business">Business</button>
            <button class="filter-btn" data-category="social-media">Social Media</button>
            <button class="filter-btn" data-category="photography-insights">Photography Insights</button>
            <button class="filter-btn" data-category="personal-branding">Personal Branding</button>
            <button class="filter-btn" data-category="marketing">Marketing</button>
            <button class="filter-btn" data-category="client-experience">Client Experience</button>
        </div>

        <div class="search-container">
            <input type="text" id="search-input" placeholder="Search articles..." class="search-input">
        </div>
    </div>
</section>

      <main class="blog-grid">
        <div class="category-heading">
          <h2 id="current-category">All Articles</h2>
          <p id="post-count" class="post-count">Showing all posts</p>
        </div>
        <div class="blog-posts" id="blog-posts">
          



{posts.map(post =>(
  <BlogCard
    category={post.frontmatter.category}
    imageSrc={post.frontmatter.imageSrc}
    imageAlt={post.frontmatter.imageAlt}
    cardCategory={post.frontmatter.cardCategory}
    blogTitle={post.frontmatter.blogTitle}
    blogExcerpt={post.frontmatter.blogExcerpt}
    slug={post.frontmatter.slug}
  />
))}








<script is:inline >
    const toggle = document.getElementById("filter-toggle"),
        content = document.getElementById("filter-content");
if (toggle && content) toggle.onclick = () => {
    content.classList.toggle("open");
    toggle.classList.toggle("active")
}; 

</script>


<script is:inline>
    document.addEventListener("DOMContentLoaded", () => {
        const b = document.querySelectorAll(".blog-card"),
            f = document.getElementById("category-filters"),
            d = document.getElementById("current-category"),
            c = document.getElementById("post-count"),
            s = document.getElementById("search-input");
        if (!f || !d || !c || !s) return;
        let a = "all";







        const filter = () => {
            const t = s.value.toLowerCase();
            let v = 0;
            b.forEach(card => {
                const cats = card.dataset.category.toLowerCase().split(" "),
                    matchCat = a === "all" || cats.includes(a),
                    title = card.querySelector(".blog-card-title")?.textContent.toLowerCase() || "",
                    excerpt = card.querySelector(".blog-card-excerpt")?.textContent.toLowerCase() || "",
                    category = card.querySelector(".blog-card-category")?.textContent.toLowerCase() || "",
                    matchSearch = !t || title.includes(t) || excerpt.includes(t) || category.includes(t);
                if (matchCat && matchSearch) {
                    card.style.display = "";
                    v++
                } else {
                    card.style.display = "none"
                }
            });




            

            // Updated line for current category display
            d.textContent = a === "all"
                ? "All Articles"
                : `${a.split('-').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ')} Articles`;
            c.textContent = `Showing ${v} posts`
        };


        f.onclick = e => {
            if (e.target.classList.contains("filter-btn")) {
                document.querySelectorAll(".filter-btn").forEach(btn => btn.classList.remove("active"));
                e.target.classList.add("active");
                a = e.target.dataset.category;
                filter()
            }
        };
        s.oninput = filter;
        filter()
    });
    </script>




</MainLayout>



<style>



:root {
  --shadow: 0 8px 24px rgba(0, 0, 0, 0.12);
}

/* Blog-specific styling */
body {
  font-family: var(--ff-primary);
  background-color: var(--ltclr);
  color: var(--blkclr);
  /* line-height: 1.5; */
  font-weight: var(--fw-normal);
}

h1,
h2,
h3,
h4,
h5,
h6 {
  
  /* line-height: 1.2; */
  font-weight: var(--fw-semi-bold);
  margin-block: var(--size-3);
  text-wrap: balance;
}


#current-category {
  text-transform: capitalize;
  
}

.category-heading{
margin-block: var(--size-3);


}

h1{
    font-size:var(--fs-800);
     
}

h2 {
 
  font-size:var(--fs-500);
  
}


.blog-container {
  width: min(calc(100% - 2em), 100%);
  margin: 0 auto;
  /* padding: 0 2em; */
}

.main-content {
  display: grid;
  grid-template-columns: 1fr;
  gap: var(--size-7);
  /* gap:6em; */
  padding: var(--size-7) 0;
}

.filter-section {
  position: sticky;
  /* top: 16px; */
  top: 200px;
  height: fit-content;
  padding:  var(--size-7);
  background: var(--ltclr);
  border: 1px solid #e5e5e5;
  box-shadow: var(--shadow);
  
  
}

.filter-tabs {
  display: flex;
  flex-direction: column;
  gap: 8px;
  margin: var(--size-5) 0;
  font-size:var(--fs-400);
  
}

.search-container {
  margin-top: var(--size-5);
}

.search-input {
  width: 100%;
  padding: var(--size-3);
  font-size: var(--fs-400);
  border: 1px solid #e5e5e5;
  background: var(--ltclr);
  color: var(--blkclr);
  transition: border-color 0.2s ease;
}

.search-input:hover {
  border-color: var(--blkclr);
}

.search-input:focus {
  outline: none;
  border-color: var(--blkclr);
}

.filter-btn {
  padding: var(--size-3);
  text-align: left;
  background: transparent;
  color: var(--blkclr);
  border: 1px solid #e5e5e5;
  transition: border-color 0.2s ease;
  font-family: var(--ff-primary);
}

.filter-btn:hover {
  border-color: var(--blkclr);
}

.filter-btn:focus-visible {
  outline: none;
  box-shadow: 0 0 0 2px var(--blkclr);

}

.filter-btn.active {
  background: var(--blkclr);
  color: var(--ltclr);
  border-color: var(--blkclr);
 
}


/* Filter Header (contains title and toggle button) */
.filter-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
  /* padding-bottom:var(--size-3); */
    margin-bottom:var(--size-3);
    border-bottom: 1px solid #e5e5e5; /* Separator for mobile header */

    
}

/* Filter Toggle Button - visible by default (mobile) */
.filter-toggle-btn {
    display: flex; /* Show for mobile */
    background: var(--blkclr);
    color: var(--ltclr);
    border: none;
    padding: 10px 12px;
    margin-bottom:var(--size-3);
    font-size:var(--fs-350);
    cursor: pointer;
    align-items: center;
    gap: 8px;
    transition: background-color 0.2s ease, transform 0.3s ease;
}

.filter-toggle-btn:hover {
    background-color: #333;
}

.filter-toggle-btn .arrow {
    transition: transform 0.3s ease;
    font-size:var(--fs-300);
}

.filter-toggle-btn.active .arrow {
    transform: rotate(180deg);
}

/* Filter Content Wrapper - hidden by default (mobile) */
.filter-content {
    max-height: 0; /* Hidden by default */
    overflow: hidden; /* Hide overflowing content */
    padding-block:0;
    transition: max-height 0.3s ease-out, padding 0.3s ease-out;
}

.filter-content.open {
    max-height: 1000px; /* Large enough to show all content */
}

/* Mobile-first adjustments to existing filter-section */
@media (max-width: 767px) {
    .filter-section {
        position: relative; /* Not sticky on mobile */
        top: auto;
        padding:var(--size-3); /* Reduced padding for mobile */
        border: none; /* No border when collapsed */
        box-shadow: none; /* No shadow when collapsed */
        border-radius: 8px;
        margin-bottom:var(--size-4);

        
    }
    
    .filter-tabs {
        display: grid; /* Grid for mobile 2-column layout */
        grid-template-columns: 1fr 1fr; /* Two columns for mobile buttons */
        gap: 8px;
        margin: 0 0 var(--size-5) 0;
    }
}

/* Desktop styles - hide toggle and ensure content is visible */
@media (min-width: 768px) {
    .filter-toggle-btn {
        display: none;
    }
    
    .filter-header {
        border-bottom: none;
        padding-bottom: 0;
        margin-bottom: var(--size-3);

        
    }
    
    .filter-content {
        max-height: none;
        overflow: visible;
    }
    
    .filter-tabs {
        display: flex;
        flex-direction: column;
        gap: 8px;
       margin:var(--size-5) 0;

      
    }

    .blog-container {
        width: 80%;
        margin: auto;
    }
}


.blog-posts {
  display: grid;
  grid-template-columns: 1fr;
  gap: var(--size-5);
}


@media (min-width: 768px) {
  .main-content {
    grid-template-columns: 280px 1fr;
    
  }}



@media (min-width: 640px) {
  .blog-container {
     padding:0 var(--size-5);
  }

  .blog-posts {
    grid-template-columns: repeat(1, 1fr);
  }
}

@media (min-width: 1024px) {
  .blog-container {
    padding:0 var(--size-7);
  }

  .blog-posts {
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  }
}



</style>